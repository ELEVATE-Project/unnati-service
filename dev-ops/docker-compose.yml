version: '3'
services:
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: none
  mongo:
    image: 'mongo:4.1.4'
    container_name: mongo
    restart: 'always'
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
      - logs:/var/log/mongodb
  redis:
    image: 'redis:7.0.0'
    container_name: redis
    restart: 'always'
    ports:
      - '6379:6379'
    networks:
      - elevate_net
    logging:
      driver: none
  project:
    build: '.'
    # image: elevate-unnati
    # image: shikshalokamqa/elevate-samiksha-service:0.0.6
    container_name: project
    ports:
      - '5003:5003'
    volumes:
      - .:/var/src  
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-project
    env_file:
      - integration_test.env
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
  
networks:
  elevate_net:
    external: false
volumes:
  mongo-data:
  logs:
